

project_headers = 
{
	"source/dao_common.h" ,
	"source/dao_font.h" ,
	"source/dao_image.h" ,
	"source/dao_path.h" ,
	"source/dao_canvas.h" ,
	"source/dao_mesh.h" ,
	"source/dao_scene.h" ,
	"source/dao_terrain.h" ,
	"source/dao_triangulator.h" ,
	"source/dao_painter.h" ,
	"source/dao_renderer.h" ,
#	"source/dao_graphics.h" ,
	"source/dao_resource.h" ,
	"source/dao_xml.h" ,
	"source/dao_png.h" ,
	"source/dao_format.h" ,
	"source/dao_opengl.h" ,
}

project_sources = 
{
	"source/dao_common.c" ,
	"source/dao_font.c" ,
	"source/dao_image.c" ,
	"source/dao_path.c" ,
	"source/dao_canvas.c" ,
	"source/dao_mesh.c" ,
	"source/dao_scene.c" ,
	"source/dao_terrain.c" ,
	"source/dao_triangulator.c" ,
	"source/dao_painter.c" ,
	"source/dao_renderer.c" ,
	"source/dao_graphics.c" ,
	"source/dao_resource.c" ,
	"source/dao_xml.c" ,
	"source/dao_png.c" ,
	"source/dao_format.c" ,
	"source/dao_opengl.c" ,
}


daovm  = DaoMake::FindPackage( "Dao",    $REQUIRED )
opengl = DaoMake::FindPackage( "OpenGL3", $OPTIONAL )
gles   = DaoMake::FindPackage( "OpenGLES", $OPTIONAL )
glut   = DaoMake::FindPackage( "GLUT",   $OPTIONAL )

if( daovm == none or (opengl == none and gles == none) ) return

project = DaoMake::Project( "DaoGraphics" ) 

# In Linux, one may place GL/gl3.h under the current directory:
DaoMake::Includes.append( project.SourcePath() )

project.UseImportLibrary( daovm )

if( gles != none ){
	project.AddDefinition( "DAO_GRAPHICS_USE_GLES" )
	project.UseSharedLibrary( gles )
}else{
	project.UseSharedLibrary( opengl )
}
if( glut != none ){
	project_headers.append( "source/dao_glut.h" )
	project_sources.append( "source/dao_glut.c" )
	project.UseSharedLibrary( glut )
	project.AddDefinition( "DAO_GRAPHICS_USE_GLUT" )
}

project.SetTargetPath( "../../lib/dao/modules" )

project_objs = project.AddObjects( project_sources, project_headers )
project_dll  = project.AddSharedLibrary( "dao_graphics", project_objs )
project_lib  = project.AddStaticLibrary( "dao_graphics", project_objs )


project.GenerateFinder( $TRUE );
project.Install( DaoMake::Variables[ "INSTALL_MOD" ], project_dll );
project.Install( DaoMake::Variables[ "INSTALL_MOD" ], project_lib );
