
load math;
load graphics;

Graphics::glutInit( 900, 600, 'Tank', 15, 1 )

length = 1
width = 0.1

scene = Graphics::Scene();

heightmap = Graphics::Image();

texImages =
{
#	"../media/textures/rock_with_algae_test.png",
#	"../media/textures/rock_with_algae_test.png",
	"../media/textures/rock_with_algae.png",
	"../media/textures/cliff_with_grass.png"
}

bumpImages = 
{
	"../media/textures/rock_with_algae_bump.png",
	"../media/textures/cliff_with_grass_bump.png"
}

materials = {}

for( i = 0 : % texImages - 1 ){
	image = Graphics::Image();
	image2 = Graphics::Image();
	image.Load( texImages[i] )
	image2.Load( bumpImages[i] )

	texture = Graphics::Texture();
	texture2 = Graphics::Texture();
	texture.SetImage( image );
	texture2.SetImage( image2 );

	material = Graphics::Material()
	material.SetTexture( texture, $first )
	material.SetTexture( texture2, $second )
	materials.append( material );
}

camera = Graphics::Camera()

circles = 2;
radius = 5.0;
height = circles*radius/4;

math.srand( 100 )

# Public domain heightmap, downloaded from wikipedia.org:
terrain: Graphics::Terrain;
if( 1 ){
	heightmap.Load( '../media/heightmap.png' )
	terrain = scene.AddHexTerrain( heightmap, circles, radius, height )
}else{
	height = 2.0;
	heightmap2 = array<float>(20,20){ rand(2.0) + 0.5 }
	terrain = scene.AddHexTerrain( heightmap2, circles, radius )
}
camera.Move( 0.0, 2*circles*radius, 2*circles*radius )
camera.LookAt( 0.0, 0.35*circles*radius, 0.0 );
#camera.LookAt( 0.5*circles*radius, 0.35*circles*radius, 0.0 );
camera.SetFOV( 60 );

terrain.EachBlock { [block] block.SetMaterial( materials[ rand( %materials ) ] ) }

#tile = terrain.GetBlock( 0, 1, 0 )
#tile.SetMaterial( materials[ rand( %materials ) ] )

camera.SetFarPlane( 10000 );
camera.Orient( $Z );
scene.AddNode( camera );


intensity1 = 0.2;
intensity2 = 0.2;
intensity3 = 0.2;
intensity4 = 0.2;

len = 2*circles*radius

light1 = Graphics::Light( $spot, intensity1, intensity1, intensity1 )
light2 = Graphics::Light( $spot, intensity2, intensity2, intensity2 )
light3 = Graphics::Light( $spot, intensity3, intensity3, intensity3 )
light4 = Graphics::Light( $spot, intensity4, intensity4, intensity4 )
light1.Move( 0.0, 0.0, 5*len );
light2.Move( len, 0.0, 5*len );
light3.Move( 0.5*len, len*sin(0.6667*3.1415), 5*len );
light4.Move( 0.5*len, -len*sin(0.6667*3.1415), 5*len );
scene.AddNode( light1 );
scene.AddNode( light2 );
scene.AddNode( light3 );
scene.AddNode( light4 );

renderer = Graphics::Renderer();
renderer.SetCurrentCamera( camera )
#renderer.Enable( $axis );
Graphics::glutDisplay( renderer, scene )
