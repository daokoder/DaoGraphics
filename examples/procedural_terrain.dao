
load math;
load random;
load graphics;
load time;

var length = 1
var width = 0.1

var scene = Graphics::Scene();

var heightmap = Graphics::Image();

var texImages =
{
	"../media/textures/rock_with_algae.png",
	"../media/textures/cliff_with_grass.png"
}

var bumpImages = 
{
	"../media/textures/rock_with_algae_bump.png",
	"../media/textures/cliff_with_grass_bump.png"
}

var materials = {}

for(var i = 0 : % texImages - 1 ){
	var image = Graphics::Image();
	var image2 = Graphics::Image();
	image.Load( texImages[i] )
	image2.Load( bumpImages[i] )

	var texture = Graphics::Texture();
	var texture2 = Graphics::Texture();
	texture.SetImage( image );
	texture2.SetImage( image2 );

	var material = Graphics::Material()
	material.SetTexture( texture, $diffuse )
	material.SetTexture( texture2, $bump )
	materials.append( material );
}

var camera = Graphics::Camera()

var circles = 3
var radius = 5.0;

var terrain: Graphics::Terrain | none = none

if( 1 ){
	var generator = Graphics::TerrainGenerator( $rectangle, circles, circles, radius )
	#generator.Configure( amplitude = 1.0 )
	#generator.ConfigureBlock( 0, 0, 0, amplitude = 0.1 ) # flat central tile;
	generator.Generate( 15, 0 )
	terrain = generator.GetTerrain()
	#terrain = generator.ExportRectTerrain( circles, circles, 3.0*radius );
	scene.AddNode( terrain )
}else{
	var generator = Graphics::TerrainGenerator( $hexagon, circles, radius )
	generator.Configure( amplitude = 2.0 )
	generator.ConfigureBlock( 0, 0, 0, amplitude = 0.1 ) # flat central tile;
	generator.Generate( 10, 1 )
	#terrain = generator.GetTerrain()
	terrain = generator.ExportHexTerrain( circles, radius );
	scene.AddNode( terrain )
}
camera.Move( 0.0, circles*radius, circles*radius )
camera.LookAt( 0.0, 0.15*circles*radius, 0.0 );
camera.SetFOV( 60 );

terrain.EachBlock { [block] block.SetMaterial( materials[ random.rand( %materials - 1 ) ] ) }


camera.SetFarPlane( 10000 );
camera.Orient( $Z );
scene.AddNode( camera );

var intensity1 = 0.2;
var intensity2 = 0.2;
var intensity3 = 0.2;
var intensity4 = 0.2;

var len = 2*circles*radius

var light1 = Graphics::Light( $spot, intensity1, intensity1, intensity1 )
var light2 = Graphics::Light( $spot, intensity2, intensity2, intensity2 )
var light3 = Graphics::Light( $spot, intensity3, intensity3, intensity3 )
var light4 = Graphics::Light( $spot, intensity4, intensity4, intensity4 )
light1.Move( 0.0, 0.0, 5*len );
light2.Move( len, 0.0, 5*len );
light3.Move( 0.5*len, len*sin(0.6667*3.1415), 5*len );
light4.Move( 0.5*len, -len*sin(0.6667*3.1415), 5*len );
scene.AddNode( light1 );
scene.AddNode( light2 );
scene.AddNode( light3 );
scene.AddNode( light4 );

var window = Graphics::Window( 960, 640, "Terrain" )
window.Show( scene, 10, 1 )
window.Quit()

#{
Graphics::glutInit( 900, 600, 'Tank', 15, 1 )
renderer = Graphics::Renderer();
renderer.SetCurrentCamera( camera )
#renderer.Enable( $axis );
Graphics::glutDisplay( renderer, scene )
#}
