
load graphics

routine ComputeMoveStep( camera: Graphics::Camera )
{
	var pos = camera.translation
	var focus = camera.focus
	var dist = 0.0;
	dist += (pos.x - focus.x) * (pos.x - focus.x)
	dist += (pos.y - focus.y) * (pos.y - focus.y)
	dist += (pos.z - focus.z) * (pos.z - focus.z)
	return 0.25 * sqrt( dist )
}

routine MoveCameraByDirection( camera: Graphics::Camera, dir: enum<left,right,up,down> )
{
	switch( dir ){
	case $left  : camera.MoveBy( ComputeMoveStep(camera), 0, 0 );
	case $right : camera.MoveBy( -ComputeMoveStep(camera), 0, 0 );
	case $up    : camera.MoveBy( 0, ComputeMoveStep(camera), 0 );
	case $down  : camera.MoveBy( 0, -ComputeMoveStep(camera), 0 );
	}
}

routine ZoomCamera( camera: Graphics::Camera, mode: enum<in,out> )
{
	var fov = camera.fov;
	if( mode == $in ){
		camera.SetFOV( 0.9*fov )
	}else{
		var scaled = 1.1 * fov;
		var interpolated = 0.9 * fov + 0.1 * 179;
		camera.SetFOV( scaled < interpolated ? scaled : interpolated );
	}
}
