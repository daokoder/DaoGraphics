
project = DaoMake::Project( "GLFW" )

common_headers = 
{
	"src/internal.h",
	"include/GLFW/glfw3.h",
	"include/GLFW/glfw3native.h"
}
common_sources = 
{
	"src/context.c",
	"src/init.c",
	"src/input.c",
	"src/monitor.c",
	"src/window.c"
}

macosx_headers =
{
	"src/cocoa_platform.h",
	"src/iokit_joystick.h",
	"src/posix_tls.h",
	"src/nsgl_context.h"
}
macosx_sources =
{
	"src/cocoa_init.m",
	"src/cocoa_monitor.m",
	"src/cocoa_window.m",
	"src/iokit_joystick.m",
	"src/nsgl_context.m",
	"src/mach_time.c",
	"src/posix_tls.c",
}

unix_headers =
{
	"src/x11_platform.h",
	"src/xkb_unicode.h",
	"src/linux_joystick.h",
	"src/posix_time.h",
	"src/posix_tls.h"
}
unix_sources =
{
	"src/x11_init.c",
	"src/x11_monitor.c",
	"src/x11_window.c",
	"src/xkb_unicode.c",
	"src/linux_joystick.c",
	"src/posix_time.c",
	"src/posix_tls.c",
	"src/glx_context.c"
}

win32_headers =
{
	"src/win32_platform.h",
	"src/win32_tls.h",
	"src/winmm_joystick.h",
	"src/wgl_context.h"
}

win32_sources =
{
	"src/win32_init.c",
	"src/win32_monitor.c",
	"src/win32_time.c",
	"src/win32_tls.c",
	"src/win32_window.c",
	"src/winmm_joystick.c",
	"src/wgl_context.c"
}

project.AddIncludePath( "include", "src" )

objects = project.AddObjects( common_sources, common_headers )

lib = project.AddStaticLibrary( "glfw", objects )


opengl = DaoMake::FindPackage( "OpenGL", $REQUIRED )
project.UseSharedLibrary( opengl )


deps = { "OpenGL" }

project.AddDefinition( "_GLFW_HAS_DLOPEN", "1" )
if( DaoMake::IsPlatform( "WIN32" ) ){
	project.AddDefinition( "_GLFW_WIN32", "1" )
	project.AddDefinition( "_GLFW_WGL", "1" )
	project.AddLinkingFlag( "-lopengl32" )
	objects.AddHeaders( win32_headers )
	objects.AddSources( win32_sources )
}else if( DaoMake::IsPlatform( "MACOSX" ) ){
	project.AddDefinition( "_GLFW_COCOA", "1" )
	project.AddDefinition( "_GLFW_NSGL", "1" )
	project.AddDefinition( "_GLFW_USE_OPENGL", "1" )
	objects.AddHeaders( macosx_headers )
	objects.AddSources( macosx_sources )
	deps = { "Cocoa", "OpenGL", "IOKit", "CoreFoundation", "CoreVideo" }
}else if( DaoMake::IsPlatform( "UNIX" ) ){
	project.AddCompilingFlag( "-fPIC" )
	project.AddLinkingFlag( "-lrt -lm" )
	project.AddDefinition( "_GLFW_X11", "1")
	project.AddDefinition( "_GLFW_GLX", "1" )
	project.AddDefinition( "_GLFW_USE_OPENGL", "1" )
	objects.AddHeaders( unix_headers )
	objects.AddSources( unix_sources )
	deps = { "OpenGL","X11","Xrandr","Xinerama","XInput","Xf86VidMode","XKB","Xcursor" }
}else{
	std.error( "No supported platform was detected" )
}

deps.iterate { [name]
	dep = DaoMake::FindPackage( name, $REQUIRED )
	project.UseSharedLibrary( dep )
	lib.UseSharedLibrary( dep )
}


